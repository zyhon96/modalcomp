{"version":3,"sources":["Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","show","className","onClick","onClose","e","stopPropagation","App","useState","setShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAwCeA,EAtCD,SAAAC,GACV,OAAKA,EAAMC,KAqBP,qBAAKC,UAAU,QAAQC,QAASH,EAAMI,QAAtC,SACI,sBAAKF,UAAU,gBAAgBC,QAAS,SAAAE,GAAC,OAAIA,EAAEC,mBAA/C,UACI,qBAAKJ,UAAU,eAAf,SACI,oBAAIA,UAAU,cAAd,2BAEJ,qBAAKA,UAAU,aAAf,mCAGA,qBAAKA,UAAU,eAAf,SACI,wBAAQC,QAASH,EAAMI,QAASF,UAAU,SAA1C,0BA7BL,MCYAK,MAZf,WACC,MAAwBC,oBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KAGC,OACE,sBAAKP,UAAU,MAAf,UACE,wBAAQC,QAAS,kBAAMM,GAAQ,IAA/B,wBACA,cAAC,EAAD,CAAOL,QAAS,kBAAMK,GAAQ,IAAQR,KAAMA,QCCnCS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.8e300d78.chunk.js","sourcesContent":["// import React, { useEffect } from 'react'\n\nconst Modal = props => {\n    if (!props.show) {\n        return null\n    }\n\n    // const closeOnEscapeKeyDown = (e) => {\n    //     if ((e.charCode || e.keyCode) === 27) {\n    //         props.onClose();\n    //     }\n    // }\n\n    // useEffect(() => {\n    //     document.body.addEventListener('keydown', closeOnEscapeKeyDown)\n    //     return function cleanup() {\n    //         document.body.removeEventListener('keydown', closeOnEscapeKeyDown)\n    //     }\n    // }, [])\n\n\n\n\n    return (\n        <div className=\"modal\" onClick={props.onClose}>\n            <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n                <div className=\"modal-header\">\n                    <h4 className=\"modal-title\">Modal Title</h4>\n                </div>\n                <div className=\"modal-body\">\n                    This is modal content\n                </div>\n                <div className=\"modal-footer\">\n                    <button onClick={props.onClose} className=\"button\">Close</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal\n","import './App.css';\nimport Modal from \"./Modal/Modal\";\nimport React, { useState } from \"react\"\n\nfunction App() {\n const [show, setShow] = useState(false);\n\n\n  return (\n    <div className=\"app\">\n      <button onClick={() => setShow(true) }>Show Modal</button>\n      <Modal onClose={() => setShow(false)} show={show} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}